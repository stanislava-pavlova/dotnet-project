@model JobBoard.ViewModels.Offers.IndexVM
@using JobBoard.Entities
@using JobBoard.ExtentionMethods
@{
    User loggedUser = this.ViewContext.HttpContext.Session.GetObject<User>("loggedUser");
    ViewData["title"] = "Offers";
}

<div class="row">
    <div class="col-md-12">
        <h4 class="text-primary text-center">Offers</h4>
    </div>
</div>

<div class="row mt-3">
    <form action="/Offers/Index" method="get" class="form-inline">
        @Html.HiddenFor(m => m.Pager.ItemsPerPage)
        <div class="form-group ml-2">
            @Html.TextBoxFor(m => m.Filter.Title, new { placeholder = "Title", @class = "form-control ml-1" })
        </div>

        <div class="form-group ml-2">
            @Html.TextBoxFor(m => m.Filter.Category, new { placeholder = "Category", @class = "form-control ml-1" })
        </div>

        <div class="form-group ml-2">
            @Html.TextBoxFor(m => m.Filter.Description, new { placeholder = "Description", @class = "form-control ml-1" })
        </div>

        <div class="form-group d-flex justify-content-center ml-2">
            <button type="submit" value="Filter" class="btn btn-primary">Search</button>
            <a href="/Offers/Index?Pager.ItemsPerPage=@Model.Pager.ItemsPerPage" style="margin-left: 1rem;">Clear</a>
        </div>
    </form>
</div>

<div class="row mt-3">
    <a class="link mb-3" href="/Offers/Create" style=" padding-left: 15px;">Create offer</a>
</div>

<div class="row mt-2">
    @foreach (Offer item in Model.Items)
    {
        <div class="col-lg-3 col-md-6">
            <div class="card mb-4" style="height: 15rem; box-shadow: 0 0 25px rgb(0 0 0 / 15%); border-radius: 0.5rem; ">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <h5 class="card-title">@item.Title</h5>
                    </div>

                    <p class="card-text">@item.Category</p>

                    <p class="fst-italic">@item.Description</p>

                    @if (loggedUser.Id == item.OwnerId)
                    {
                        <div class="d-flex justify-content-around">
                            <a class="btn btn-warning btn-sm" href="/Offers/Edit?id=@item.Id">Edit</a>
                            <a class="btn btn-danger btn-sm" onclick="return confirm(" Are you sure?")" href="/Offers/Delete?id=@item.Id">Delete</a>
                            <a class="btn btn-primary btn-sm" href="/Offers/Share?id=@item.Id">Share</a>
                        </div>
                    }
                    else
                    {
                        <div class="d-flex">
                            <a class="link" href="#">Learn more</a>
                            <span class="card-text">@*@item.Owner*@</span>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
</div>

<div class="row">
    @{
        string controller = this.ViewContext.RouteData.Values["controller"].ToString();
        string action = this.ViewContext.RouteData.Values["action"].ToString();
        int selectedIndex = 0;
        if (Model.Pager.ItemsPerPage == 4)
        {
            selectedIndex = 0;
        }
        else if (Model.Pager.ItemsPerPage == 8)
        {
            selectedIndex = 1;
        }
        else if (Model.Pager.ItemsPerPage == 12)
        {
            selectedIndex = 2;
        }
    }
    <div class="col">
        @for (int i = 0; i < Model.Pager.PagesCount; i++)
        {
            <a href="/@controller/@action?Pager.Page=@(i+1)&Pager.ItemsPerPage=@Model.Pager.ItemsPerPage&Filter.Title=@Model.Filter.Title&Filter.Category=@Model.Filter.Category&Filter.Description=@Model.Filter.Description">
                @(i+1)
            </a>
        }
    </div>

    <script>
        function ddlItemsPerPage_OnChange() {
            let control = document.getElementById("ddlItemsPerPage");

             document.location.href = "/@controller/@action?Pager.ItemsPerPage=" + control.value + "&Filter.Title=@Model.Filter.Title&Filter.Category=@Model.Filter.Category&Filter.Description=@Model.Filter.Description";
        }

        window.addEventListener('load', (event) => {
                    document.getElementById("ddlItemsPerPage").selectedIndex = @selectedIndex;
        });
    </script>

    <div class="col">
        <select id="ddlItemsPerPage" onchange="ddlItemsPerPage_OnChange()">
            <option value="4">4</option>
            <option value="8">8</option>
            <option value="12">12</option>
        </select>
    </div>
</div>
