@model JobBoard.ViewModels.Users.IndexVM
@using JobBoard.Entities
@{
    this.Layout = "/Views/Shared/_Layout.cshtml";
    ViewData["title"] = "Users";
}

<div class="row">
    <div class="col-md-12">
        <h4 class="text-primary text-center">Users</h4>
    </div>
</div>

<div class="row mt-4">
    <form action="/Users/Index" method="get" class="form-inline">
        @Html.HiddenFor(m => m.Pager.ItemsPerPage) 
        <div class="form-group ml-2">
            @Html.TextBoxFor(m => m.Filter.Username, new { placeholder = "Username", @class = "form-control ml-1" })
        </div>

        <div class="form-group ml-2">
            @Html.TextBoxFor(m => m.Filter.FirstName, new { placeholder = "First Name", @class = "form-control ml-1" })
        </div>

        <div class="form-group ml-2">
            @Html.TextBoxFor(m => m.Filter.LastName, new { placeholder = "Last Name", @class = "form-control ml-1" })
        </div>

        <div class="form-group d-flex justify-content-center ml-2">
            <button type="submit" value="Filter" class="btn btn-primary">Search</button>
            <a href="/Users/Index?Pager.ItemsPerPage=@Model.Pager.ItemsPerPage" style="margin-left: 1rem;">Clear</a>
        </div>
    </form>
</div>

<div class="row">
    <a href="/Users/Create" class="mt-4">Create new user</a>
</div>

<table class="table">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Username</th>
            <th scope="col">First Name</th>
            <th scope="col">Last Name</th>
            <th scope="col"></th>
            <th scope="col"></th>

        </tr>
    </thead>
    <tbody>
        @foreach (User item in Model.Items)
        {
            <tr>
                <th scope="row">@item.Id</th>
                <td>@item.Username</td>
                <td>@item.FirstName</td>
                <td>@item.LastName</td>
                <td><a href="/Users/Edit?Id=@item.Id">Edit</a></td>
                <td>
                    <a onclick="return confirm('Delete item?')"
                       href="/Users/Delete?Id=@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="row">
    @{
        string controller = this.ViewContext.RouteData.Values["controller"].ToString();
        string action = this.ViewContext.RouteData.Values["action"].ToString();
        int selectedIndex = 0;
        if (Model.Pager.ItemsPerPage == 3)
        {
            selectedIndex = 0;
        }
        else if (Model.Pager.ItemsPerPage == 5)
        {
            selectedIndex = 1;
        }
        else if (Model.Pager.ItemsPerPage == 10)
        {
            selectedIndex = 2;
        }
    }
    <div class="col">
        @for (int i = 0; i < Model.Pager.PagesCount; i++)
        {
            <a href="/@controller/@action?Pager.Page=@(i+1)&Pager.ItemsPerPage=@Model.Pager.ItemsPerPage&Filter.Username=@Model.Filter.Username&Filter.FirstName=@Model.Filter.FirstName&Filter.LastName=@Model.Filter.LastName">
                @(i+1)
            </a>
        }
    </div>

    <script>
        function ddlItemsPerPage_OnChange() {
            let control = document.getElementById("ddlItemsPerPage");

             document.location.href = "/@controller/@action?Pager.ItemsPerPage=" + control.value + "&Filter.Username=@Model.Filter.Username&Filter.FirstName=@Model.Filter.FirstName&Filter.LastName=@Model.Filter.LastName";
        }

        window.addEventListener('load', (event) => {
                    document.getElementById("ddlItemsPerPage").selectedIndex = @selectedIndex;
        });
    </script>
    <div class="col">
        <select id="ddlItemsPerPage" onchange="ddlItemsPerPage_OnChange()">
            <option value="3">3</option>
            <option value="5">5</option>
            <option value="10">10</option>
        </select>
    </div>
</div>
